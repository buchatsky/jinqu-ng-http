// Karma configuration file
const path = require('path');

module.exports = function (config) {
  config.set({
    basePath: '',
    frameworks: [
      'jasmine', 
      'webpack',
      //'sourcemap'
    ],
    plugins: [
      require('karma-webpack'),
      require('karma-jasmine'),
      require('karma-chrome-launcher'),
      require('karma-jasmine-html-reporter'),
      require('karma-coverage'),
      require('karma-sourcemap-loader'),
    ],
    files: [
      //'test/test-init.ts',
      //'lib/**/*.ts',
      //'index.ts',
      //'test/**/*.spec.ts'
      { pattern: 'test/test.ts', watched: false }
    ],
    preprocessors: {
      "**/*.ts": ['webpack'],
      //"test/test.ts": ['webpack']
      "**/*.js": ['sourcemap']
    },
    webpack: {
      // karma watches the test entry points
      // Do NOT specify the entry option
      // webpack watches dependencies

      // webpack configuration
      devtool: 'inline-source-map',
      //entry: {
      //  main: './test/test.ts'
      //},
      output: {
        //filename: '[name].js',
        path: path.join(__dirname, 'temp'),
        clean: true,
      },
      resolve: {
        // Add '.ts' and '.tsx' as resolvable extensions.
        extensions: ['.ts', '.js'],
        //modules: [NODEDIR],
        //symlinks: true
      },
      module: {
        rules: [
          {
            test: /\.ts$/i,
            use: [
              'ts-loader', 
          ]
    },
        ]
      }  
    },
    client: {
      jasmine: {
        // configuration options for Jasmine
      },
      clearContext: false // leave Jasmine Spec Runner output visible in browser
    },
    jasmineHtmlReporter: {
      suppressAll: true // removes the duplicated traces
    },
    coverageReporter: {
      //dir: require('path').join(__dirname, './coverage/ng12-hello'),
      //subdir: '.',
      reporters: [
        { type: 'html' },
        { type: 'text-summary' }
      ]
    },
    reporters: ['progress', 'kjhtml'],
    port: 9876,
    colors: true,
    logLevel: config.LOG_INFO,
    autoWatch: true,
    //browsers: ['Chrome'],
    browsers: ["ChromeHeadless"],
    singleRun: false,
    restartOnFileChange: true,

    customLaunchers: {
      ChromeHeadless: {
          base: 'Chrome',
          flags: [
              //"--no-sandbox",
              //"--user-data-dir=/tmp/chrome-test-profile",
              "--disable-web-security",
              //"--remote-debugging-address=0.0.0.0",
              "--remote-debugging-port=9222",
          ],
          debug: true,
      }
    }

  });
};
